# name: RELEASE

# on:
#   push:
#     # Sequence of patterns matched against refs/tags
#     tags:
#       - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

# env:
#   JAVA_VERSION: "12.x"
#   FLUTTER_VERSION: "2.2.3"
#   FLUTTER_CHANNEL: "stable"

# jobs:
#   flutter_test:
#     name: Analyze & format & test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-java@v1
#         with:
#           java-version: ${{env.JAVA_VERSION}}
#       - uses: subosito/flutter-action@v1
#         with:
#           channel: ${{env.FLUTTER_CHANNEL}}
#           flutter-version: ${{env.FLUTTER_VERSION}}
#       - run: |
#           flutter clean
#           flutter pub get
#           flutter analyze
#           flutter format --dry-run --set-exit-if-changed lib/
#           flutter format --dry-run --set-exit-if-changed test/
#           flutter test --coverage
#           flutter test --machine > test-results.json
#       - uses: dorny/test-reporter@v1.4.2
#         with:
#           name: test-results
#           path: test-results.json
#           reporter: flutter-json
#       - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
#         with:
#           min_coverage: 10
#       - uses: codecov/codecov-action@v2
#         with:
#           file: coverage/lcov.info

#   create_release:
#     name: create_release
#     needs: [flutter_test]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0 # Mandatory to use the extract version from tag action
#       - name: Extract version from tag
#         uses: damienaicheh/extract-version-from-tag-action@v1.0.0
#       - uses: actions/setup-java@v1
#         with:
#           java-version: ${{env.JAVA_VERSION}}
#       - uses: subosito/flutter-action@v1
#         with:
#           channel: ${{env.FLUTTER_CHANNEL}}
#           flutter-version: ${{env.FLUTTER_VERSION}}

#       - uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release (${{ env.NUMBER_OF_COMMITS }}) ${{ github.ref }}
#           body: |
#             Changes in this Release
#             - First Change
#             - Second Change
#           draft: false
#           prerelease: false

#       # Make appbundle downloadable
#       # - name: Upload artifact
#       #   uses: actions/upload-artifact@v2
#       #   with:
#       #     name: appbundle_release
#       #     path: build/app/outputs/bundle/release

#       # Upload file to Play Store
#       # - name: Upload play store
#       #   uses: r0adkll/upload-google-play@v1
#       #   with:
#       #     serviceAccountJson: service_account.json
#       #     packageName: br.com.wendreof.cnpj
#       #     releaseFiles: build/app/outputs/bundle/release/*.aab
#       #     track: internal
#       #     status: completed
#       #     inAppUpdatePriority: 2
#       #     releaseName: ${{ env.NUMBER_OF_COMMITS }} (${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }})
#       #     whatsNewDirectory: distribution/whatsnew
#       #     mappingFile: build/app/outputs/mapping/release/mapping.txt

#   notify_telegram1:
#     name: Notify Publish Success
#     needs: [create_release]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: appleboy/telegram-action@master
#         with:
#           to: ${{ secrets.TELEGRAM_TO }}
#           token: ${{ secrets.TELEGRAM_TOKEN }}
#           message: |
#             You've published NEW RELEASE sucessfully to GITHUB :)
